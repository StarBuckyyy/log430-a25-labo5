name: CI/CD for Store Manager

on:
  push:
    branches: [ main ]

jobs:
  build-test-and-deploy:
    name: Build, Test and Deploy
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create .env file for testing
      run: |
        echo "DB_HOST=127.0.0.1" > .env
        echo "DB_PORT=3306" >> .env
        echo "DB_USER=root" >> .env
        echo "DB_PASSWORD=root" >> .env
        echo "DB_NAME=labo05_db" >> .env
        echo "REDIS_HOST=127.0.0.1" >> .env
        echo "REDIS_PORT=6379" >> .env
        echo "REDIS_DB=0" >> .env

    - name: Start services for tests with permissive MySQL
      run: |
        # On démarre Redis normalement
        docker compose up -d redis
        docker run --name mysql-test -d -p 3306:3306 \
          -e MYSQL_ROOT_PASSWORD=root \
          -e MYSQL_DATABASE=labo05_db \
          mysql:8.4.7 \
          --default-authentication-plugin=mysql_native_password

    - name: Wait for MySQL to be ready
      run: |
        echo "Waiting for MySQL to start..."
        sleep 20 # On augmente un peu par sécurité

    - name: Run automated tests
      env:
        CI: true
        PYTHONPATH: src
      run: pytest

    - name: Stop test services
      if: always()
      run: |
        docker compose down
        docker stop mysql-test && docker rm mysql-test

    - name: Deploy new version to VM
      if: success()
      run: |
        echo "✅ Tests passed. Deploying new version..."
        docker compose up -d --build